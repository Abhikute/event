# Generated by Django 2.2.2 on 2019-12-08 05:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=125)),
                ('event_photo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_location', models.CharField(max_length=100)),
                ('event_category', models.CharField(choices=[('Shayari', 'Shayari'), ('dance', 'Dance'), ('music', 'Music'), ('singing', 'Singing'), ('drama', 'Drama')], default='None', max_length=100, null=True)),
                ('event_start_date', models.DateField()),
                ('event_end_date', models.DateField()),
                ('event_discription', models.TextField(blank=True, null=True)),
                ('event_address', models.TextField(blank=True, null=True)),
                ('event_highlight1', models.TextField(blank=True, null=True)),
                ('event_highlight2', models.TextField(blank=True, null=True)),
                ('event_highlight3', models.TextField(blank=True, null=True)),
                ('event_highlight4', models.TextField(blank=True, null=True)),
                ('event_highlight5', models.TextField(blank=True, null=True)),
                ('event_highlight6', models.TextField(blank=True, null=True)),
                ('event_photo1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo4', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo5', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo6', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('event_photo7', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='user_reg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(blank=True, max_length=100, null=True)),
                ('event_name', models.CharField(blank=True, max_length=100, null=True)),
                ('event_category', models.CharField(blank=True, max_length=80, null=True)),
                ('event_sub_category', models.CharField(blank=True, max_length=80, null=True)),
                ('first_name', models.CharField(blank=True, max_length=125, null=True)),
                ('Last_name', models.CharField(blank=True, max_length=125, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('mobile', models.IntegerField(blank=True, null=True)),
                ('alternamte_mobile', models.IntegerField(blank=True, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=1, null=True)),
                ('birthdate', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('videofile', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='')),
                ('user_register', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rel_payment_payt', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaytmHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ORDERID', models.CharField(max_length=30, verbose_name='ORDER ID')),
                ('TXNDATE', models.DateTimeField(default=django.utils.timezone.now, verbose_name='TXN DATE')),
                ('TXNID', models.CharField(max_length=64, verbose_name='TXN ID')),
                ('BANKTXNID', models.IntegerField(blank=True, null=True, verbose_name='BANK TXN ID')),
                ('BANKNAME', models.CharField(blank=True, max_length=50, null=True, verbose_name='BANK NAME')),
                ('RESPCODE', models.IntegerField(verbose_name='RESP CODE')),
                ('PAYMENTMODE', models.CharField(blank=True, max_length=10, null=True, verbose_name='PAYMENT MODE')),
                ('CURRENCY', models.CharField(blank=True, max_length=4, null=True, verbose_name='CURRENCY')),
                ('GATEWAYNAME', models.CharField(blank=True, max_length=30, null=True, verbose_name='GATEWAY NAME')),
                ('MID', models.CharField(max_length=40)),
                ('RESPMSG', models.TextField(max_length=250, verbose_name='RESP MSG')),
                ('TXNAMOUNT', models.FloatField(verbose_name='TXN AMOUNT')),
                ('STATUS', models.CharField(max_length=12, verbose_name='STATUS')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rel_payment_paytm', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ORDERID', 'TXNID')},
            },
        ),
    ]
